# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Lint and Unit Test

on:
  push:
  pull_request:
  # Uncomment to do scheduled testing in case upstream modules break
  # schedule:
     # At midnight on Mondays UTC
  #  - cron: '0 0 * * 1'

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:

    runs-on: ubuntu-latest

    env:
      ALTMETRIC_API_KEY: '${{ secrets.ALTMETRIC_API_KEY }}'
      ALTMETRIC_API_SECRET: '${{ secrets.ALTMETRIC_API_SECRET }}'

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Set up Credentials files
      run: |
        echo -e '${{ secrets.GMAIL_CREDENTIALS }}' > credentials.json
        echo -e '${{ secrets.GMAIL_TOKEN }}' > token.json

    - name: Test with pytest
      run: |
        pytest test_*
